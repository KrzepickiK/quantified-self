
name: PRODUCTION Build and Deploy

on:
  release:
    types: [published]


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.18.4]

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get lisences
        run: |
          curl "https://firebasestorage.googleapis.com/v0/b/quantified-self-io.appspot.com/o/assets%2Flicenses.json?alt=media&token=470a21d4-571d-432d-a6f6-95df7a24de33" --create-dirs -o licenses.json

      - name: npm test and npm run build
        run: |
          yarn install
          npm run test
          npm run build-production

      - name: Get fonts
        run: |
          curl "https://firebasestorage.googleapis.com/v0/b/quantified-self-io.appspot.com/o/assets%2Ffonts%2Fproxima-nova-regular.woff?alt=media&token=17c6e5ba-1a2f-4bdd-af56-b467b754f0be" --create-dirs -o dist/assets/fonts/proxima-nova-regular.woff
          curl "https://firebasestorage.googleapis.com/v0/b/quantified-self-io.appspot.com/o/assets%2Ffonts%2Fproxima-nova-regular.woff2?alt=media&token=8caf4bf3-4d07-4240-bfe7-5234f3f65408" --create-dirs -o dist/assets/fonts/proxima-nova-regular.woff2

      - name: Deploy to Firebase
        run: |
          npm install -g firebase-tools
          firebase deploy --token "${{ secrets.FIREBASE_TOKEN }}" --only hosting:production
